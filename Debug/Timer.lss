
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000318  000003ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000318  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800140  00800140  000003ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000041c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  0000045c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001043  00000000  00000000  00000504  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000992  00000000  00000000  00001547  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000088c  00000000  00000000  00001ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00002768  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000511  00000000  00000000  00002908  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000069f  00000000  00000000  00002e19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000034b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  68:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  6c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  70:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d2 e0       	ldi	r29, 0x02	; 2
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	11 e0       	ldi	r17, 0x01	; 1
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b1 e0       	ldi	r27, 0x01	; 1
  86:	e8 e1       	ldi	r30, 0x18	; 24
  88:	f3 e0       	ldi	r31, 0x03	; 3
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a0 34       	cpi	r26, 0x40	; 64
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	a0 e4       	ldi	r26, 0x40	; 64
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
  9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
  a0:	a1 34       	cpi	r26, 0x41	; 65
  a2:	b2 07       	cpc	r27, r18
  a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
  a6:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <main>
  aa:	0c 94 8a 01 	jmp	0x314	; 0x314 <_exit>

000000ae <__bad_interrupt>:
  ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <toggle_e>:
{
	byte temp = data>>4;    // получить старшие 4 бита
	lcd_putc(temp+'0');     // отобразить старшую цифру
	data &= 0x0F;           // получить младшие 4 бита
	lcd_putc(data+'0');     // отобразить младшую цифру
}
  b2:	2a 9a       	sbi	0x05, 2	; 5
	...
  c4:	2a 98       	cbi	0x05, 2	; 5
  c6:	08 95       	ret

000000c8 <lcd_write>:
  c8:	cf 93       	push	r28
  ca:	c8 2f       	mov	r28, r24
  cc:	66 23       	and	r22, r22
  ce:	11 f0       	breq	.+4      	; 0xd4 <lcd_write+0xc>
  d0:	28 9a       	sbi	0x05, 0	; 5
  d2:	01 c0       	rjmp	.+2      	; 0xd6 <lcd_write+0xe>
  d4:	28 98       	cbi	0x05, 0	; 5
  d6:	29 98       	cbi	0x05, 1	; 5
  d8:	23 9a       	sbi	0x04, 3	; 4
  da:	24 9a       	sbi	0x04, 4	; 4
  dc:	25 9a       	sbi	0x04, 5	; 4
  de:	26 9a       	sbi	0x04, 6	; 4
  e0:	2e 98       	cbi	0x05, 6	; 5
  e2:	2d 98       	cbi	0x05, 5	; 5
  e4:	2c 98       	cbi	0x05, 4	; 5
  e6:	2b 98       	cbi	0x05, 3	; 5
  e8:	cc 23       	and	r28, r28
  ea:	0c f4       	brge	.+2      	; 0xee <lcd_write+0x26>
  ec:	2e 9a       	sbi	0x05, 6	; 5
  ee:	c6 fd       	sbrc	r28, 6
  f0:	2d 9a       	sbi	0x05, 5	; 5
  f2:	c5 fd       	sbrc	r28, 5
  f4:	2c 9a       	sbi	0x05, 4	; 5
  f6:	c4 fd       	sbrc	r28, 4
  f8:	2b 9a       	sbi	0x05, 3	; 5
  fa:	0e 94 59 00 	call	0xb2	; 0xb2 <toggle_e>
  fe:	2e 98       	cbi	0x05, 6	; 5
 100:	2d 98       	cbi	0x05, 5	; 5
 102:	2c 98       	cbi	0x05, 4	; 5
 104:	2b 98       	cbi	0x05, 3	; 5
 106:	c3 fd       	sbrc	r28, 3
 108:	2e 9a       	sbi	0x05, 6	; 5
 10a:	c2 fd       	sbrc	r28, 2
 10c:	2d 9a       	sbi	0x05, 5	; 5
 10e:	c1 fd       	sbrc	r28, 1
 110:	2c 9a       	sbi	0x05, 4	; 5
 112:	c0 fd       	sbrc	r28, 0
 114:	2b 9a       	sbi	0x05, 3	; 5
 116:	0e 94 59 00 	call	0xb2	; 0xb2 <toggle_e>
 11a:	2b 9a       	sbi	0x05, 3	; 5
 11c:	2c 9a       	sbi	0x05, 4	; 5
 11e:	2d 9a       	sbi	0x05, 5	; 5
 120:	2e 9a       	sbi	0x05, 6	; 5
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <lcd_read>:
 126:	88 23       	and	r24, r24
 128:	11 f0       	breq	.+4      	; 0x12e <lcd_read+0x8>
 12a:	28 9a       	sbi	0x05, 0	; 5
 12c:	01 c0       	rjmp	.+2      	; 0x130 <lcd_read+0xa>
 12e:	28 98       	cbi	0x05, 0	; 5
 130:	29 9a       	sbi	0x05, 1	; 5
 132:	23 98       	cbi	0x04, 3	; 4
 134:	24 98       	cbi	0x04, 4	; 4
 136:	25 98       	cbi	0x04, 5	; 4
 138:	26 98       	cbi	0x04, 6	; 4
 13a:	2a 9a       	sbi	0x05, 2	; 5
	...
 14c:	1b 9b       	sbis	0x03, 3	; 3
 14e:	02 c0       	rjmp	.+4      	; 0x154 <lcd_read+0x2e>
 150:	80 e1       	ldi	r24, 0x10	; 16
 152:	01 c0       	rjmp	.+2      	; 0x156 <lcd_read+0x30>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	1c 99       	sbic	0x03, 4	; 3
 158:	80 62       	ori	r24, 0x20	; 32
 15a:	1d 99       	sbic	0x03, 5	; 3
 15c:	80 64       	ori	r24, 0x40	; 64
 15e:	1e 99       	sbic	0x03, 6	; 3
 160:	80 68       	ori	r24, 0x80	; 128
 162:	2a 98       	cbi	0x05, 2	; 5
	...
 174:	2a 9a       	sbi	0x05, 2	; 5
	...
 186:	1b 99       	sbic	0x03, 3	; 3
 188:	81 60       	ori	r24, 0x01	; 1
 18a:	1c 99       	sbic	0x03, 4	; 3
 18c:	82 60       	ori	r24, 0x02	; 2
 18e:	1d 99       	sbic	0x03, 5	; 3
 190:	84 60       	ori	r24, 0x04	; 4
 192:	1e 99       	sbic	0x03, 6	; 3
 194:	88 60       	ori	r24, 0x08	; 8
 196:	2a 98       	cbi	0x05, 2	; 5
 198:	08 95       	ret

0000019a <lcd_waitbusy>:
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	0e 94 93 00 	call	0x126	; 0x126 <lcd_read>
 1a0:	88 23       	and	r24, r24
 1a2:	dc f3       	brlt	.-10     	; 0x19a <lcd_waitbusy>
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	8a 95       	dec	r24
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <lcd_waitbusy+0xc>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_waitbusy+0x12>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	0e 94 93 00 	call	0x126	; 0x126 <lcd_read>
 1b2:	08 95       	ret

000001b4 <lcd_command>:
 1b4:	cf 93       	push	r28
 1b6:	c8 2f       	mov	r28, r24
 1b8:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_waitbusy>
 1bc:	60 e0       	ldi	r22, 0x00	; 0
 1be:	8c 2f       	mov	r24, r28
 1c0:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 1c4:	cf 91       	pop	r28
 1c6:	08 95       	ret

000001c8 <lcd_clrscr>:
 1c8:	40 e4       	ldi	r20, 0x40	; 64
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	60 e2       	ldi	r22, 0x20	; 32
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	0e 94 83 01 	call	0x306	; 0x306 <memset>
 1d8:	08 95       	ret

000001da <hide_cursor>:
 1da:	8c e0       	ldi	r24, 0x0C	; 12
 1dc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
 1e0:	08 95       	ret

000001e2 <lcd_home>:
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
 1e8:	08 95       	ret

000001ea <lcd_init>:
 1ea:	cf 93       	push	r28
 1ec:	c8 2f       	mov	r28, r24
 1ee:	20 9a       	sbi	0x04, 0	; 4
 1f0:	21 9a       	sbi	0x04, 1	; 4
 1f2:	22 9a       	sbi	0x04, 2	; 4
 1f4:	23 9a       	sbi	0x04, 3	; 4
 1f6:	24 9a       	sbi	0x04, 4	; 4
 1f8:	25 9a       	sbi	0x04, 5	; 4
 1fa:	26 9a       	sbi	0x04, 6	; 4
 1fc:	8f e3       	ldi	r24, 0x3F	; 63
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <lcd_init+0x16>
 204:	00 c0       	rjmp	.+0      	; 0x206 <lcd_init+0x1c>
 206:	00 00       	nop
 208:	2c 9a       	sbi	0x05, 4	; 5
 20a:	2b 9a       	sbi	0x05, 3	; 5
 20c:	0e 94 59 00 	call	0xb2	; 0xb2 <toggle_e>
 210:	92 e8       	ldi	r25, 0x82	; 130
 212:	9a 95       	dec	r25
 214:	f1 f7       	brne	.-4      	; 0x212 <lcd_init+0x28>
 216:	00 c0       	rjmp	.+0      	; 0x218 <lcd_init+0x2e>
 218:	0e 94 59 00 	call	0xb2	; 0xb2 <toggle_e>
 21c:	80 e1       	ldi	r24, 0x10	; 16
 21e:	8a 95       	dec	r24
 220:	f1 f7       	brne	.-4      	; 0x21e <lcd_init+0x34>
 222:	0e 94 59 00 	call	0xb2	; 0xb2 <toggle_e>
 226:	90 e1       	ldi	r25, 0x10	; 16
 228:	9a 95       	dec	r25
 22a:	f1 f7       	brne	.-4      	; 0x228 <lcd_init+0x3e>
 22c:	2b 98       	cbi	0x05, 3	; 5
 22e:	0e 94 59 00 	call	0xb2	; 0xb2 <toggle_e>
 232:	80 e1       	ldi	r24, 0x10	; 16
 234:	8a 95       	dec	r24
 236:	f1 f7       	brne	.-4      	; 0x234 <lcd_init+0x4a>
 238:	88 e2       	ldi	r24, 0x28	; 40
 23a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
 23e:	88 e0       	ldi	r24, 0x08	; 8
 240:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
 244:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <lcd_clrscr>
 248:	86 e0       	ldi	r24, 0x06	; 6
 24a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
 24e:	8c 2f       	mov	r24, r28
 250:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <lcd_direct_putc>:
 258:	cf 93       	push	r28
 25a:	c8 2f       	mov	r28, r24
 25c:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_waitbusy>
 260:	61 e0       	ldi	r22, 0x01	; 1
 262:	8c 2f       	mov	r24, r28
 264:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 268:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_waitbusy>
 26c:	80 31       	cpi	r24, 0x10	; 16
 26e:	29 f4       	brne	.+10     	; 0x27a <lcd_direct_putc+0x22>
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	80 ec       	ldi	r24, 0xC0	; 192
 274:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 278:	16 c0       	rjmp	.+44     	; 0x2a6 <lcd_direct_putc+0x4e>
 27a:	80 35       	cpi	r24, 0x50	; 80
 27c:	29 f4       	brne	.+10     	; 0x288 <lcd_direct_putc+0x30>
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	80 e9       	ldi	r24, 0x90	; 144
 282:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 286:	0f c0       	rjmp	.+30     	; 0x2a6 <lcd_direct_putc+0x4e>
 288:	80 32       	cpi	r24, 0x20	; 32
 28a:	29 f4       	brne	.+10     	; 0x296 <lcd_direct_putc+0x3e>
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	80 ed       	ldi	r24, 0xD0	; 208
 290:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 294:	08 c0       	rjmp	.+16     	; 0x2a6 <lcd_direct_putc+0x4e>
 296:	80 36       	cpi	r24, 0x60	; 96
 298:	31 f4       	brne	.+12     	; 0x2a6 <lcd_direct_putc+0x4e>
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	80 e8       	ldi	r24, 0x80	; 128
 29e:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 2a2:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_waitbusy>
 2a6:	cf 91       	pop	r28
 2a8:	08 95       	ret

000002aa <lcd_flush>:
 2aa:	0f 93       	push	r16
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	0e 94 ed 00 	call	0x1da	; 0x1da <hide_cursor>
 2b6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_home>
 2ba:	c0 e0       	ldi	r28, 0x00	; 0
 2bc:	d1 e0       	ldi	r29, 0x01	; 1
 2be:	00 e4       	ldi	r16, 0x40	; 64
 2c0:	11 e0       	ldi	r17, 0x01	; 1
 2c2:	89 91       	ld	r24, Y+
 2c4:	0e 94 2c 01 	call	0x258	; 0x258 <lcd_direct_putc>
 2c8:	c0 17       	cp	r28, r16
 2ca:	d1 07       	cpc	r29, r17
 2cc:	d1 f7       	brne	.-12     	; 0x2c2 <lcd_flush+0x18>
 2ce:	df 91       	pop	r29
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	08 95       	ret

000002d8 <main>:
int main(void){
	
	
	
	
	lcd_init(LCD_DISP_ON);
 2d8:	8c e0       	ldi	r24, 0x0C	; 12
 2da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_init>
    }
	else
	{ 
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
	}
	lcd_pos = 16 * y + x;
 2de:	c1 e0       	ldi	r28, 0x01	; 1
*************************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
   	if(y == 0)
	{
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
 2e0:	81 e8       	ldi	r24, 0x81	; 129
 2e2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    }
	else
	{ 
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
	}
	lcd_pos = 16 * y + x;
 2e6:	c0 93 40 01 	sts	0x0140, r28	; 0x800140 <__data_end>
	
	
	while(1){
		lcd_gotoxy(1,0);
		lcd_clrscr();
 2ea:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <lcd_clrscr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ee:	2f ef       	ldi	r18, 0xFF	; 255
 2f0:	81 ee       	ldi	r24, 0xE1	; 225
 2f2:	94 e0       	ldi	r25, 0x04	; 4
 2f4:	21 50       	subi	r18, 0x01	; 1
 2f6:	80 40       	sbci	r24, 0x00	; 0
 2f8:	90 40       	sbci	r25, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0x1c>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x26>
 2fe:	00 00       	nop
		
		//WriteTime();	

		_delay_ms(200);
		lcd_flush();
 300:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_flush>
	}
 304:	ed cf       	rjmp	.-38     	; 0x2e0 <main+0x8>

00000306 <memset>:
 306:	dc 01       	movw	r26, r24
 308:	01 c0       	rjmp	.+2      	; 0x30c <memset+0x6>
 30a:	6d 93       	st	X+, r22
 30c:	41 50       	subi	r20, 0x01	; 1
 30e:	50 40       	sbci	r21, 0x00	; 0
 310:	e0 f7       	brcc	.-8      	; 0x30a <memset+0x4>
 312:	08 95       	ret

00000314 <_exit>:
 314:	f8 94       	cli

00000316 <__stop_program>:
 316:	ff cf       	rjmp	.-2      	; 0x316 <__stop_program>
